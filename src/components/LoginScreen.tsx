import { useState } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Card } from './ui/card';
import { Phone, ArrowRight } from 'lucide-react';
import { LanguageToggle } from './LanguageToggle';

interface LoginScreenProps {
  onLogin: () => void;
  language: string;
  onLanguageChange: (lang: string) => void;
}

const translations = {
  en: {
    title: 'Rural HealthConnect',
    subtitle: 'Your health companion',
    phoneLabel: 'Enter your phone number',
    phonePlaceholder: '+91 98765 43210',
    otpLabel: 'Enter OTP',
    otpPlaceholder: '123456',
    sendOtp: 'Send OTP',
    verify: 'Verify & Login',
    doctorWave: 'ЁЯСЛ Welcome to better healthcare!',
    prototypeNote: 'Prototype only: any phone number and OTP will work for now.'
  },
  pa: {
    title: 'ри░рйВри░ри▓ ри╣рйИри▓рие риХриирйЗриХриЯ',
    subtitle: 'ридрйБри╣ри╛рибри╛ ри╕ри┐ри╣рид ри╕ри╛риерйА',
    phoneLabel: 'риЖрикригри╛ рилри╝рйЛрии риирй░римри░ рижри╛риЦри▓ риХри░рйЛ',
    phonePlaceholder: '+91 98765 43210',
    otpLabel: 'OTP рижри╛риЦри▓ риХри░рйЛ',
    otpPlaceholder: '123456',
    sendOtp: 'OTP ринрйЗриЬрйЛ',
    verify: 'ридри╕рижрйАриХ риЕридрйЗ ри▓ри╛риЧри┐рии',
    doctorWave: 'ЁЯСЛ римри┐ри╣ридри░ ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ ри╡ри┐рй▒риЪ ри╕рйБриЖриЧрид!',
    prototypeNote: 'ри╕ри┐ри░рилри╝ рикрйНри░рйЛриЯрйЛриЯри╛риИрик: риЗри╕ ри╡рйЗри▓рйЗ риХрйЛриИ ри╡рйА рилри╝рйЛрии риирй░римри░ риЕридрйЗ OTP риХрй░рио риХри░рйЗриЧри╛.'
  },
  hi: {
    title: 'рд░реВрд░рд▓ рд╣реЗрд▓реНрдердХрдиреЗрдХреНрдЯ',
    subtitle: 'рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╛рдереА',
    phoneLabel: 'рдЕрдкрдирд╛ рдлреЛрди рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ',
    phonePlaceholder: '+91 98765 43210',
    otpLabel: 'OTP рджрд░реНрдЬ рдХрд░реЗрдВ',
    otpPlaceholder: '123456',
    sendOtp: 'OTP рднреЗрдЬреЗрдВ',
    verify: 'рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░реЗрдВ рдФрд░ рд▓реЙрдЧрд┐рди',
    doctorWave: 'ЁЯСЛ рдмреЗрд╣рддрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рдореЗрдВ рд╕реНрд╡рд╛рдЧрдд!',
    prototypeNote: 'рдХреЗрд╡рд▓ рдкреНрд░реЛрдЯреЛрдЯрд╛рдЗрдк: рдлрд┐рд▓рд╣рд╛рд▓ рдХреЛрдИ рднреА рдлрд╝реЛрди рдирдВрдмрд░ рдФрд░ OTP рдХрд╛рдо рдХрд░реЗрдЧрд╛.'
  }
};

export function LoginScreen({ onLogin, language, onLanguageChange }: LoginScreenProps) {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [otp, setOtp] = useState('');
  const [step, setStep] = useState<'phone' | 'otp'>('phone');
  const t = translations[language as keyof typeof translations] || translations.en;

  const handleSendOtp = () => {
    if (phoneNumber.length >= 10) {
      setStep('otp');
    }
  };

  const handleVerifyOtp = () => {
    if (otp.length === 6) {
      onLogin();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-primary to-primary/80 flex flex-col">
      {/* Header */}
      <div className="flex justify-between items-center p-4">
        <div></div>
        <LanguageToggle currentLanguage={language} onLanguageChange={onLanguageChange} />
      </div>

      {/* Content */}
      <div className="flex-1 flex flex-col items-center justify-center px-6 pb-8">
        {/* Logo and Title */}
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">ЁЯПе</div>
          <h1 className="text-3xl text-white mb-2 text-center font-medium">{t.title}</h1>
          <p className="text-primary-foreground/80 text-lg">{t.subtitle}</p>
        </div>

        {/* Login Card */}
        <Card className="w-full max-w-sm bg-white p-6 shadow-xl">
          {step === 'phone' ? (
            <div className="space-y-6">
              <div>
                <label className="block text-lg mb-3 text-foreground">{t.phoneLabel}</label>
                <div className="relative">
                  <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5" />
                  <Input
                    type="tel"
                    placeholder={t.phonePlaceholder}
                    value={phoneNumber}
                    onChange={(e) => setPhoneNumber(e.target.value)}
                    className="pl-12 h-14 text-lg border-2"
                  />
                </div>
              </div>
              <Button 
                onClick={handleSendOtp}
                className="w-full h-14 text-lg bg-primary hover:bg-primary/90"
                disabled={phoneNumber.length < 10}
              >
                {t.sendOtp}
                <ArrowRight className="ml-2 h-5 w-5" />
              </Button>
              <p className="text-xs text-muted-foreground text-center">{t.prototypeNote}</p>
            </div>
          ) : (
            <div className="space-y-6">
              <div>
                <label className="block text-lg mb-3 text-foreground">{t.otpLabel}</label>
                <Input
                  type="text"
                  placeholder={t.otpPlaceholder}
                  value={otp}
                  onChange={(e) => setOtp(e.target.value.replace(/\D/g, '').slice(0, 6))}
                  className="h-14 text-lg text-center border-2 tracking-widest"
                  maxLength={6}
                />
              </div>
              <Button 
                onClick={handleVerifyOtp}
                className="w-full h-14 text-lg bg-primary hover:bg-primary/90"
                disabled={otp.length !== 6}
              >
                {t.verify}
                <ArrowRight className="ml-2 h-5 w-5" />
              </Button>
              <p className="text-xs text-muted-foreground text-center">{t.prototypeNote}</p>
            </div>
          )}
        </Card>

        {/* Doctor Illustration */}
        <div className="mt-8 text-center">
          <div className="text-4xl mb-2">ЁЯСитАНтЪХя╕П</div>
          <p className="text-primary-foreground/80 text-lg">{t.doctorWave}</p>
        </div>
      </div>
    </div>
  );
}